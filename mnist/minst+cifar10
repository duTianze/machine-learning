{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/duTianze/machine-learning/blob/master/keras/s2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "id": "GeFBDkM7b2iG",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# 保存图片"
      ]
    },
    {
      "metadata": {
        "id": "zZ3XqE_qb7b-",
        "colab_type": "code",
        "outputId": "15c9ae4f-ac58-431c-81e8-2d37ba241bd4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 421
        }
      },
      "cell_type": "code",
      "source": [
        "from keras.datasets import mnist\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "from matplotlib import pyplot as plt\n",
        "from keras import backend\n",
        "import os\n",
        "\n",
        "backend.set_image_data_format('channels_first')\n",
        "\n",
        "# 导入数据\n",
        "(X_train, y_train), (X_validation, y_validation) = mnist.load_data()\n",
        "\n",
        "X_train = X_train.reshape(X_train.shape[0], 1, 28, 28).astype('float32')\n",
        "X_validation = X_validation.reshape(X_validation.shape[0], 1, 28, 28).astype('float32')\n",
        "\n",
        "# ZCA白化\n",
        "imgGen = ImageDataGenerator(zca_whitening=True)\n",
        "imgGen.fit(X_train)\n",
        "\n",
        "# 创建目录，并保存图像\n",
        "try:\n",
        "    os.mkdir('image')\n",
        "except:\n",
        "    print('The fold is exist!')\n",
        "for X_batch, y_batch in imgGen.flow(X_train, y_train, batch_size=9, save_to_dir='image', save_prefix='oct',\n",
        "                                    save_format='png'):\n",
        "    for i in range(0, 9):\n",
        "        plt.subplot(331 + i)\n",
        "        plt.imshow(X_batch[i].reshape(28, 28), cmap=plt.get_cmap('gray'))\n",
        "    plt.show()\n",
        "    break"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Using TensorFlow backend.\n",
            "/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image.py:836: UserWarning: This ImageDataGenerator specifies `zca_whitening`, which overrides setting of `featurewise_center`.\n",
            "  warnings.warn('This ImageDataGenerator specifies '\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7ff02961dba8>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "CUr0H1fjcR6H",
        "colab_type": "code",
        "outputId": "c1f86e22-9457-42ee-b2e9-7e89c2d4c11e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        }
      },
      "cell_type": "code",
      "source": [
        "!ls image"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "oct_10051_9532.png  oct_14601_9585.png\toct_44582_1429.png\n",
            "oct_106_4585.png    oct_18289_3612.png\toct_5608_9475.png\n",
            "oct_14236_8668.png  oct_23878_8029.png\toct_9165_7983.png\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "sJRmsU7TcvV9",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# *cifar10*"
      ]
    },
    {
      "metadata": {
        "id": "tpg51P9odYxW",
        "colab_type": "code",
        "outputId": "28a42be2-e102-44fb-c353-5f727182a4e6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 454
        }
      },
      "cell_type": "code",
      "source": [
        "from keras.datasets import cifar10\n",
        "from matplotlib import pyplot as plt\n",
        "from scipy.misc import toimage\n",
        "import numpy as np\n",
        "\n",
        "# 导入数据\n",
        "(X_train, y_train), (X_validation, y_validation) = cifar10.load_data()\n",
        "\n",
        "for i in range(0, 9):\n",
        "    plt.subplot(331 + i)\n",
        "    plt.imshow(toimage(X_train[i]))\n",
        "\n",
        "# 显示图片\n",
        "plt.show()\n",
        "\n",
        "# 设定随机种子\n",
        "seed = 7\n",
        "np.random.seed(seed)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n",
            "170500096/170498071 [==============================] - 4s 0us/step\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `toimage` is deprecated!\n",
            "`toimage` is deprecated in SciPy 1.0.0, and will be removed in 1.2.0.\n",
            "Use Pillow's ``Image.fromarray`` directly instead.\n",
            "  # This is added back by InteractiveShellApp.init_path()\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nhYqHepkpKCgoKFQ81MtMQUFBQaHioV5mCgoKCgoVj2mpNP3tb3+b9u7dS5qm0X333UeXXXYhCbO8\nN2zevJn27NlDlmXRnXfeSStWrDjrUhEKU4tqsztlcxc+qs3miCrI7twpxu7du92vfOUrruu67uHD\nh93bbrttqk855di1a5d7++23u67rukNDQ+7111/v3nvvve727dtd13XdRx55xH3mmWfOZxcvelSb\n3Smbu/BRbTbnupVld1NOM+7atYtuvPFGIiKaP38+jYyMjCrAWYlYtWoVPfbYY0REFI/HKZfL0e7d\nu+mGG4Q247p162jXrl3ns4sXParN7pTNXfioNpsjqiy7m/KX2cDAANXV1Xn/19fXV3wZBcMwvLpO\n27Zto7Vr11Iul1OlIi4gVJvdKZu78FFtNkdUWXY37QEgbhWpZz3//PO0bds2euCBB0Ztr6ZrrBZU\nyz1RNlc5qKZ7Ugl2N+Uvs+bmZhoYGPD+7+vro6ampqk+7ZTjpZdeoscff5yefPJJisViFA6HKZ/P\nExFNulSEwtShGu1O2dyFjWq0OaLKsbspf5lde+21XgmFt99+m5qbmykajU7wrQsbqVSKNm/eTE88\n8QTV1tYSEalSERcYqs3ulM1d+Kg2myOqLLub8tD8lStX0rJly2jjxo2kaRp985vfnOpTTjm2b99O\niUSC7r77bm/bQw89RPfff78qFXGBoNrsTtnchY9qszmiyrK791wCphrzKRQufCi7U5huKJurDLwn\nz+y3v/0tHT9+nLZu3UpHjhyh++67j7Zu3Xqu+6agMArK7hSmG8rmKgfvac2sGvMpFC58KLtTmG4o\nm6scvCfPbGBggJYtW+b9X86nGG+x85k3P0dERB+/9BG675+/QEREseCl3ueRcNxr+zV0KRrxExFR\nY027t60uPNNr19bUeO3ugRNERHS0f6+3LT4DRtcwI4NzBLJERJTLDHvbgkHIsRhardd2bIuIiGw7\nhT7E0YdAQORgXBa6l97JfYOIiEaSBe/zwV5cTz6N/mYL4rdyCSxvYqgbn2dxjGR6RO5rsX1xbT94\n4FW6GHC2djdrwaX0/Paf0Y23fIp0V9iSETbw+eI2r61p+F7HkS4iInIc3LtYTYy1g147aorjtbW1\netuG07CVweEE+tvQSERExUTO25buHfTadTGco3XODPG5lfe2jQxi33QqQ//9yafp39/xJTLkY1wq\n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\nAAAASUVORK5CYII=\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7ff0157607f0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "p34GOHxkdmYP",
        "colab_type": "code",
        "outputId": "c171a694-a227-4b8b-bde4-2ef4fc350d5a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 418
        }
      },
      "cell_type": "code",
      "source": [
        "X_train[0]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[ 59,  43,  50, ..., 158, 152, 148],\n",
              "        [ 16,   0,  18, ..., 123, 119, 122],\n",
              "        [ 25,  16,  49, ..., 118, 120, 109],\n",
              "        ...,\n",
              "        [208, 201, 198, ..., 160,  56,  53],\n",
              "        [180, 173, 186, ..., 184,  97,  83],\n",
              "        [177, 168, 179, ..., 216, 151, 123]],\n",
              "\n",
              "       [[ 62,  46,  48, ..., 132, 125, 124],\n",
              "        [ 20,   0,   8, ...,  88,  83,  87],\n",
              "        [ 24,   7,  27, ...,  84,  84,  73],\n",
              "        ...,\n",
              "        [170, 153, 161, ..., 133,  31,  34],\n",
              "        [139, 123, 144, ..., 148,  62,  53],\n",
              "        [144, 129, 142, ..., 184, 118,  92]],\n",
              "\n",
              "       [[ 63,  45,  43, ..., 108, 102, 103],\n",
              "        [ 20,   0,   0, ...,  55,  50,  57],\n",
              "        [ 21,   0,   8, ...,  50,  50,  42],\n",
              "        ...,\n",
              "        [ 96,  34,  26, ...,  70,   7,  20],\n",
              "        [ 96,  42,  30, ...,  94,  34,  34],\n",
              "        [116,  94,  87, ..., 140,  84,  72]]], dtype=uint8)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "metadata": {
        "id": "Ab9flZf5eJgp",
        "colab_type": "code",
        "outputId": "89cd4ee0-f914-40e5-a399-ed5ca96b78c9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 735
        }
      },
      "cell_type": "code",
      "source": [
        "import keras\n",
        "import numpy as np\n",
        "from keras.datasets import cifar10\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dropout, Activation\n",
        "from keras.layers import Conv2D, MaxPooling2D, GlobalAveragePooling2D\n",
        "from keras.initializers import RandomNormal\n",
        "from keras import optimizers\n",
        "from keras.callbacks import LearningRateScheduler, TensorBoard\n",
        "\n",
        "batch_size = 128\n",
        "epochs = 200\n",
        "iterations = 391\n",
        "num_classes = 10\n",
        "dropout = 0.5\n",
        "log_filepath = './nin'\n",
        "\n",
        "\n",
        "def normalize_preprocessing(x_train, x_validation):\n",
        "    x_train = x_train.astype('float32')\n",
        "    x_validation = x_validation.astype('float32')\n",
        "    mean = [125.307, 122.95, 113.865]\n",
        "    std = [62.9932, 62.0887, 66.7048]\n",
        "    for i in range(3):\n",
        "        x_train[:, :, :, i] = (x_train[:, :, :, i] - mean[i]) / std[i]\n",
        "        x_validation[:, :, :, i] = (x_validation[:, :, :, i] - mean[i]) / std[i]\n",
        "\n",
        "    return x_train, x_validation\n",
        "\n",
        "\n",
        "def scheduler(epoch):\n",
        "    if epoch <= 60:\n",
        "        return 0.05\n",
        "    if epoch <= 120:\n",
        "        return 0.01\n",
        "    if epoch <= 160:\n",
        "        return 0.002\n",
        "    return 0.0004\n",
        "\n",
        "\n",
        "def build_model():\n",
        "    model = Sequential()\n",
        "\n",
        "    model.add(Conv2D(192, (5, 5), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.01), input_shape=x_train.shape[1:],\n",
        "                     activation='relu'))\n",
        "    model.add(Conv2D(160, (1, 1), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(Conv2D(96, (1, 1), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2), padding='same'))\n",
        "\n",
        "    model.add(Dropout(dropout))\n",
        "\n",
        "    model.add(Conv2D(192, (5, 5), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(Conv2D(192, (1, 1), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(Conv2D(192, (1, 1), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2), padding='same'))\n",
        "\n",
        "    model.add(Dropout(dropout))\n",
        "\n",
        "    model.add(Conv2D(192, (3, 3), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(Conv2D(192, (1, 1), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "    model.add(Conv2D(10, (1, 1), padding='same', kernel_regularizer=keras.regularizers.l2(0.0001),\n",
        "                     kernel_initializer=RandomNormal(stddev=0.05), activation='relu'))\n",
        "\n",
        "    model.add(GlobalAveragePooling2D())\n",
        "    model.add(Activation('softmax'))\n",
        "\n",
        "    sgd = optimizers.SGD(lr=0.1, momentum=0.9, nesterov=True)\n",
        "    model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy'])\n",
        "    return model\n",
        "\n",
        "np.random.seed(seed=7)\n",
        "# load data\n",
        "(x_train, y_train), (x_validation, y_validation) = cifar10.load_data()\n",
        "y_train = keras.utils.to_categorical(y_train, num_classes)\n",
        "y_validation = keras.utils.to_categorical(y_validation, num_classes)\n",
        "\n",
        "x_train, x_validation = normalize_preprocessing(x_train, x_validation)\n",
        "\n",
        "# build network\n",
        "model = build_model()\n",
        "print(model.summary())\n",
        "\n",
        "# set callback\n",
        "tb_cb = TensorBoard(log_dir=log_filepath, histogram_freq=0)\n",
        "change_lr = LearningRateScheduler(scheduler)\n",
        "cbks = [change_lr, tb_cb]\n",
        "\n",
        "'''\n",
        "# set data augmentation\n",
        "print('Using real-time data augmentation.')\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "datagen = ImageDataGenerator(horizontal_flip=True, width_shift_range=0.125, height_shift_range=0.125,\n",
        "                             fill_mode='constant', cval=0.)\n",
        "datagen.fit(x_train)\n",
        "# start training\n",
        "model.fit_generator(datagen.flow(x_train, y_train, batch_size=batch_size), steps_per_epoch=iterations,\n",
        "                    epochs=epochs, callbacks=cbks, validation_data=(x_validation, y_validation), verbose=2)\n",
        "'''"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Using TensorFlow backend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv2d_1 (Conv2D)            (None, 32, 32, 192)       14592     \n",
            "_________________________________________________________________\n",
            "conv2d_2 (Conv2D)            (None, 32, 32, 160)       30880     \n",
            "_________________________________________________________________\n",
            "conv2d_3 (Conv2D)            (None, 32, 32, 96)        15456     \n",
            "_________________________________________________________________\n",
            "max_pooling2d_1 (MaxPooling2 (None, 16, 16, 96)        0         \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 16, 16, 96)        0         \n",
            "_________________________________________________________________\n",
            "conv2d_4 (Conv2D)            (None, 16, 16, 192)       460992    \n",
            "_________________________________________________________________\n",
            "conv2d_5 (Conv2D)            (None, 16, 16, 192)       37056     \n",
            "_________________________________________________________________\n",
            "conv2d_6 (Conv2D)            (None, 16, 16, 192)       37056     \n",
            "_________________________________________________________________\n",
            "max_pooling2d_2 (MaxPooling2 (None, 8, 8, 192)         0         \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 8, 8, 192)         0         \n",
            "_________________________________________________________________\n",
            "conv2d_7 (Conv2D)            (None, 8, 8, 192)         331968    \n",
            "_________________________________________________________________\n",
            "conv2d_8 (Conv2D)            (None, 8, 8, 192)         37056     \n",
            "_________________________________________________________________\n",
            "conv2d_9 (Conv2D)            (None, 8, 8, 10)          1930      \n",
            "_________________________________________________________________\n",
            "global_average_pooling2d_1 ( (None, 10)                0         \n",
            "_________________________________________________________________\n",
            "activation_1 (Activation)    (None, 10)                0         \n",
            "=================================================================\n",
            "Total params: 966,986\n",
            "Trainable params: 966,986\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"\\n# set data augmentation\\nprint('Using real-time data augmentation.')\\nfrom keras.preprocessing.image import ImageDataGenerator\\ndatagen = ImageDataGenerator(horizontal_flip=True, width_shift_range=0.125, height_shift_range=0.125,\\n                             fill_mode='constant', cval=0.)\\ndatagen.fit(x_train)\\n# start training\\nmodel.fit_generator(datagen.flow(x_train, y_train, batch_size=batch_size), steps_per_epoch=iterations,\\n                    epochs=epochs, callbacks=cbks, validation_data=(x_validation, y_validation), verbose=2)\\n\""
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "metadata": {
        "id": "spBG93hAetm-",
        "colab_type": "code",
        "outputId": "74e97def-929a-40fc-c1a9-29bdd2484530",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 104
        }
      },
      "cell_type": "code",
      "source": [
        "model.fit(x_train, y_train, batch_size=batch_size, epochs=2, callbacks=cbks,\n",
        "          validation_data=(x_validation, y_validation), verbose=1)\n",
        "model.save('nin.h5')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 50000 samples, validate on 10000 samples\n",
            "Epoch 1/2\n",
            "50000/50000 [==============================] - 49s 976us/step - loss: 2.2861 - acc: 0.2187 - val_loss: 2.2474 - val_acc: 0.2234\n",
            "Epoch 2/2\n",
            "50000/50000 [==============================] - 48s 962us/step - loss: 2.0598 - acc: 0.3194 - val_loss: 2.0219 - val_acc: 0.3338\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "-37qQDjGSNa0",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        ""
      ]
    }
  ]
}